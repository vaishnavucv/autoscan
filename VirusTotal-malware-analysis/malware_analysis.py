import os
import requests

# Set the VirusTotal API key (replace 'YOUR_API_KEY' with your actual API key)
API_KEY = 'YOUR_API_KEY'
# Define the directory to scan (Downloads directory)
DOWNLOADS_DIR = os.path.expanduser('~/Downloads')

# Function to scan a file using VirusTotal API
def scan_file(file_path):
    # Open the file in binary mode
    with open(file_path, 'rb') as f:
        # Send the file to VirusTotal for scanning
        files = {'file': (file_path, f)}
        headers = {"x-apikey": API_KEY}
        response = requests.post('https://www.virustotal.com/api/v3/files', files=files, headers=headers)
        # Parse the JSON response
        return response.json()

# Function to get the scan report using the scan_id
def get_report(scan_id):
    # Request the report using the scan_id
    headers = {"x-apikey": API_KEY}
    response = requests.get(f'https://www.virustotal.com/api/v3/analyses/{scan_id}', headers=headers)
    # Parse the JSON response
    return response.json()

# Function to print the scan results in a user-friendly format
def print_results(results):
    print(f"Scan ID: {results['data']['id']}")
    print(f"Status: {results['data']['attributes']['status']}")
    if 'results' in results['data']['attributes']:
        print("Results:")
        for engine, result in results['data']['attributes']['results'].items():
            print(f"{engine}: {result['result']}")
    else:
        print("Scan still in progress. Please check later.")

# Main function to scan all files in the Downloads directory
def main():
    for root, _, files in os.walk(DOWNLOADS_DIR):
        for file in files:
            file_path = os.path.join(root, file)
            print(f"Scanning file: {file_path}")
            scan_result = scan_file(file_path)
            scan_id = scan_result['data']['id']
            report = get_report(scan_id)
            print_results(report)

# Run the main function
if __name__ == "__main__":
    main()
